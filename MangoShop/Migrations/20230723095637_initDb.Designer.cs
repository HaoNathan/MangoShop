// <auto-generated />
using System;
using MangoShop.Services.CouponApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MangoShop.Services.CouponApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230723095637_initDb")]
    partial class initDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.6.23329.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MangoShop.Services.CouponApi.Models.Coupon", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasComment("优惠券代码");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime");

                    b.Property<double>("DiscountAmount")
                        .HasColumnType("float")
                        .HasComment("优惠金额");

                    b.Property<int>("MinAmount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Coupons");

                    b.HasData(
                        new
                        {
                            Id = "72c301623f494aee956fdb404f256fcf",
                            Code = "AB4FE",
                            CreationTime = new DateTime(2023, 7, 23, 17, 56, 37, 919, DateTimeKind.Local).AddTicks(753),
                            DiscountAmount = 10.0,
                            MinAmount = 100
                        },
                        new
                        {
                            Id = "f0a142abc3df41b3928e7139d3dfedb6",
                            Code = "Fk778",
                            CreationTime = new DateTime(2023, 7, 23, 17, 56, 37, 919, DateTimeKind.Local).AddTicks(765),
                            DiscountAmount = 6.5999999999999996,
                            MinAmount = 88
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
